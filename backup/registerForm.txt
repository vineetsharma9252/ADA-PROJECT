import { useState } from "react";

export default function RegisterForm() {

    const [formData, setFormData] = useState({
    firstName: "",
    middleName: "",
    lastName: "",
    email: "",
    mobile: "",
    password: "",
    confirmPassword: "",
    dob: "",
    gender: "",
    address: "",
    city: "",
    state: "",
    aadhar: "",
  });

  const [aadhar, setAadhar] = useState("");
  const [error, setError] = useState("");

  const [mobile, setMobile] = useState("");
  const [moberror, setMobError] = useState("");

  const [email, setEmail] = useState("");
  const [emailError, setEmailError] = useState("");


  //validat function of aadhar
  const validateAadhar = (value) => {
    const aadharPattern = /^\d{12}$/;
    if (!aadharPattern.test(value)) {
      setError("Aadhar number must be a 12 digit numeric value.");
    } else {
      setError("");
    }
  };

  //Validation for mobile
  const validateMobile = (value) => {
    const mobilePattern = /^[6-9]\d{9}$/;
    if (!mobilePattern.test(value)) {
      setMobError("Mobile number must be a 10-digit mobile number");
    } else {
      setMobError("");
    }
  };

  //Validation for email
  const validateEmail = (value) => {
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailPattern.test(value)) {
      setEmailError("Please enter a valid email address.");
    } else {
      setEmailError("");
    }
  };


  //Handle aadhar input change
  const handleChange = (e) => {
    const value = e.target.value;
    setAadhar(value);
    validateAadhar(value);
  };

  // Handle Mobile Input Change
  const handleMobileChange = (e) => {
    const value = e.target.value;
    setMobile(value);
    validateMobile(value);
  };

  //Handle email input change
  const handleEmailChange = (e) => {
    const value = e.target.value;
    setEmail(value);
    validateEmail(value);
  }


  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
        const response = await fetch('http://localhost:5000/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(),
        });

        if (response.ok) {
            const data = await response.json();
            alert(data.message || 'User registered successfully!');
        } else {
            const errorData = await response.json();
            alert(errorData.error || 'Error registering user!');
        }
    } catch (error) {
        console.error('Fetch error:', error);
        alert('Network error occurred!');
    }
};

  return (
    <div className="flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8">
      <div className="sm:mx-auto sm:w-full sm:max-w-lg">
        <h2 className="text-center text-2xl font-bold tracking-tight text-gray-900">
          Registration Form
        </h2>
      </div>

      <div className="mt-10 sm:mx-auto sm:w-full sm:max-w-lg">
        <form action="/register-user" method="POST" className="space-y-6">
          {/* First Name */}
          <div className="flex flex-col">
            <label
              htmlFor="firstName"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              First Name
            </label>
            <input
              id="firstName"
              name="firstName"
              type="text"
              required
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            />
          </div>

          {/* Middle Name */}
          <div className="flex flex-col">
            <label
              htmlFor="middleName"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Middle Name
            </label>
            <input
              id="middleName"
              name="middleName"
              type="text"
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            />
          </div>

          {/* Last Name */}
          <div className="flex flex-col">
            <label
              htmlFor="lastName"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Last Name
            </label>
            <input
              id="lastName"
              name="lastName"
              type="text"
              required
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            />
          </div>

          {/* Email Address */}
          <div className="flex flex-col">
            <label
              htmlFor="email"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Email Address
            </label>
            <input
              id="email"
              name="email"
              type="email"
              value={email}
              onChange={handleEmailChange}
              className={`block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 placeholder:text-gray-400 ${emailError
                  ? "outline-red-500 focus:outline-red-500"
                  : "outline-gray-300 focus:outline-indigo-600"
                } sm:text-sm`}
              placeholder="Enter your email address"
            />
            {emailError && (
              <p className="mt-2 text-sm text-red-500">{emailError}</p>
            )}
          </div>

          {/* Mobile Number */}
          <div className="flex flex-col">
            <label
              htmlFor="mobile"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Mobile Number
            </label>
            <input
              id="mobile"
              name="mobile"
              type="text"
              value={mobile}
              onChange={handleMobileChange}
              maxLength="10" // Limit input to 10 characters
              className={`block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 placeholder:text-gray-400 ${moberror ? "outline-red-500 focus:outline-red-500" : "outline-gray-300 focus:outline-indigo-600"
                } sm:text-sm`}
              placeholder="Enter your 10-digit mobile number"
            />
            {moberror && (
              <p className="mt-2 text-sm text-red-500">
                {moberror}
              </p>
            )}
          </div>
          {/* Password */}
          <div className="flex flex-col">
            <label
              htmlFor="password"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Password
            </label>
            <input
              id="password"
              name="password"
              type="password"
              required
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            />
          </div>

          {/* Confirm Password */}
          <div className="flex flex-col">
            <label
              htmlFor="confirmPassword"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Confirm Password
            </label>
            <input
              id="confirmPassword"
              name="confirmPassword"
              type="password"
              required
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            />
          </div>

          {/* Date of Birth */}
          <div className="flex flex-col">
            <label
              htmlFor="dob"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Date of Birth
            </label>
            <input
              id="dob"
              name="dob"
              type="date"
              required
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            />
          </div>

          {/* Gender */}
          <div className="flex flex-col">
            <label
              htmlFor="gender"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Gender
            </label>
            <select
              id="gender"
              name="gender"
              required
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            >
              <option value="">Select Gender</option>
              <option value="male">Male</option>
              <option value="female">Female</option>
              <option value="other">Other</option>
            </select>
          </div>

          {/* Address */}
          <div className="flex flex-col">
            <label
              htmlFor="address"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Address
            </label>
            <input
              id="address"
              name="address"
              type="text"
              required
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            />
          </div>

          {/* City */}
          <div className="flex flex-col">
            <label
              htmlFor="city"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              City
            </label>
            <input
              id="city"
              name="city"
              type="text"
              required
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            />
          </div>

          {/* State */}
          <div className="flex flex-col">
            <label
              htmlFor="state"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              State
            </label>
            <input
              id="state"
              name="state"
              type="text"
              required
              className="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm"
            />
          </div>

          {/* Aadhar Number */}
          <div className="flex flex-col">
            <label
              htmlFor="aadhar"
              className="mb-2 block text-sm font-medium text-gray-900 text-left"
            >
              Aadhar Number
            </label>
            <input
              id="aadhar"
              name="aadhar"
              type="text"
              value={aadhar}
              onChange={handleChange}
              maxLength="12" // Limit input to 12 characters
              className={`block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 placeholder:text-gray-400 ${error ? "outline-red-500 focus:outline-red-500" : "outline-gray-300 focus:outline-indigo-600"
                } sm:text-sm`}
              placeholder="Enter your 12-digit Aadhar number"
            />
            {error && (
              <p className="mt-2 text-sm text-red-500">
                {error}
              </p>
            )}
          </div>

          <div>
            <button
              type="submit"
              className="w-full rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
            >
              Register
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
